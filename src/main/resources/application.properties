server.port = 8084
messaging.producer.topic = stockMarketTopic
spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id= group_id
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer


aggregateUpdate.consumer.group.id=group_id
stock.management.aggregateUpdate.topic = stockManagementTopic
stock.market.topic = stockMarketTopic

stockLocalEventStore.collectionName = stockLocalEventStore
stocks.collectionName = stocks 

localEvent.batch.size.limit=5

#Local MongoDB config
#spring.data.mongodb.database=stockManagement
#spring.data.mongodb.port=27017
#spring.data.mongodb.host=localhost

baseUrl = http://localhost:8083
company.management.companyDetails.uri = /api/v1.0/market/company

jwt.secret=secret

#dynamodb config
amazon.dynamodb.endpoint=dynamodb.ap-south-1.amazonaws.com
amazon.aws.accessKey=AKIAZ7X6CCXIUE7AXQ6C
amazon.aws.secretKey=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
amazon.aws.signingRegion = ap-south-1